version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  win: circleci/windows@5.0
  # different jobs are calles later in the workflows sections
jobs:
  build:
    executor:
       name: win/default 
     setupNvm: &setupNvm
  name: Setup NVM
  command: |
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
    echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
    echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
setupNode: &setupNode
  name: Setup Node
  command: |
    nvm install 12.13
    nvm use node
    node -v
    npm i -g npm@4.15.0
    npm -v  
    steps:
      # install node and checkout code
      - node/install:
          node-version: '14.15'         
      - checkout
      - aws-cli/setup
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            npm run frontend:install
      # TODO: Install dependencies in the the backend API          
      - run:
          name: Install API Dependencies
          command: |
           npm run api:install
      # TODO: Frontend build        
      - run:
          name: Front-End build 
          command: |
           npm run frontend:build
      # TODO: Build the backend API      
      - run:
          name: API Build
          command: |
            npm run api:build
  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: '14.15' 
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: Deploy App
          # TODO: Install, build, deploy in both apps
          command: |
            npm run deploy
            
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
